'use client';
import dynamic from 'next/dynamic';
import { useState, useEffect, useRef } from 'react';
import { analyzeLegalDocument, GeminiAnalysis } from '../components/GeminiApi';
import HeroSection from '../components/HeroSection';
import FeaturesSection from '../components/FeaturesSection';

const FileUpload = dynamic(() => import('../components/FileUpload'), { ssr: false });

export default function Home() {
  const [extractedText, setExtractedText] = useState("");
  const [analysis, setAnalysis] = useState<GeminiAnalysis | null>(null);
  const [loading, setLoading] = useState(false);
  const [error, setError] = useState<string | null>(null);
  const [showOptions, setShowOptions] = useState(false);
  const [theme, setTheme] = useState<'light' | 'dark'>("light");
  const [summaryLevel, setSummaryLevel] = useState<'brief' | 'detailed'>("brief");
  const [language, setLanguage] = useState<'en' | 'es' | 'fr'>("en");
  const [showOnboarding, setShowOnboarding] = useState(false);
  const [showHelp, setShowHelp] = useState(false);
  const downloadRef = useRef<HTMLDivElement>(null);
  const uploadRef = useRef<HTMLDivElement>(null);

  const handleExtractedText = async (text: string) => {
    setExtractedText(text);
    setAnalysis(null);
    setError(null); // Clear any previous errors
    setLoading(true);
    try {
      const result = await analyzeLegalDocument(text);
      setAnalysis(result);
    } catch (error) {
      // Handle specific error for non-legal documents
      if (error instanceof Error && error.message.includes("Please upload a valid legal document")) {
        setError("ðŸ“„ " + error.message);
      } else {
        setError("ðŸ˜• Sorry, something went wrong while analyzing your document. Please try again or use a different document.");
      }
    } finally {
      setLoading(false);
    }
  };

  // Download results as text
  const handleDownload = () => {
    if (!analysis) return;
    const content = `ClarityLegal Analysis Report

SUMMARY:
${analysis.summary}

RISKY CLAUSES TO WATCH:
${analysis.risks.map((risk, i) => `${i + 1}. ${risk}`).join('\n')}

YOUR RIGHTS & DUTIES:
${analysis.rights.map((right, i) => `${i + 1}. ${right}`).join('\n')}

CONTRACT STRUCTURE:
${analysis.structure.map((section, i) => `${i + 1}. ${section}`).join('\n')}

---
Generated by ClarityLegal AI Agent
Disclaimer: This tool helps you understand legal documents â€” not replace a real lawyer.`;
    
    const blob = new Blob([content], { type: 'text/plain' });
    const url = URL.createObjectURL(blob);
    const a = document.createElement('a');
    a.href = url;
    a.download = 'claritylegal-analysis.txt';
    a.click();
    URL.revokeObjectURL(url);
  };

  // Share results (Web Share API)
  const handleShare = async () => {
    if (!analysis || !navigator.share) return;
    const content = `ClarityLegal Analysis Report

SUMMARY:
${analysis.summary}

RISKY CLAUSES TO WATCH:
${analysis.risks.map((risk, i) => `${i + 1}. ${risk}`).join('\n')}

YOUR RIGHTS & DUTIES:
${analysis.rights.map((right, i) => `${i + 1}. ${right}`).join('\n')}

CONTRACT STRUCTURE:
${analysis.structure.map((section, i) => `${i + 1}. ${section}`).join('\n')}`;
    
    try {
      await navigator.share({
        title: 'ClarityLegal Analysis',
        text: content,
      });
    } catch {}
  };

  // Scroll to upload area when Get Started is clicked
  const scrollToUpload = () => {
    uploadRef.current?.scrollIntoView({ behavior: 'smooth', block: 'center' });
  };

  return (
    <div className="min-h-screen bg-gradient-to-br from-slate-50 via-white to-blue-50 dark:from-slate-900 dark:via-slate-800 dark:to-slate-900">
      <HeroSection onGetStarted={scrollToUpload} />
      <FeaturesSection />
      
      <main ref={uploadRef} className="relative py-20">
        <div className="container mx-auto px-4 sm:px-6 lg:px-8">
          <FileUpload onExtractedText={handleExtractedText} onError={setError} />
          
          {/* Error Display */}
          {error && (
            <div className="mt-8 max-w-4xl mx-auto animate-fade-in">
              <div className="bg-gradient-to-r from-orange-50 to-red-50 dark:from-orange-900/20 dark:to-red-900/20 border border-orange-200 dark:border-orange-800 rounded-2xl p-6 shadow-soft">
                <div className="flex items-start gap-4">
                  <div className="w-12 h-12 bg-gradient-to-br from-orange-500 to-red-500 rounded-xl flex items-center justify-center flex-shrink-0">
                    <svg className="w-6 h-6 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path strokeLinecap="round" strokeLinejoin="round" strokeWidth="2" d="M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.964-.833-2.732 0L3.732 16.5c-.77.833.192 2.5 1.732 2.5z" />
                    </svg>
                  </div>
                  <div className="flex-1">
                    <h4 className="font-semibold text-orange-800 dark:text-orange-200 mb-2">Document Analysis Error</h4>
                    <p className="text-orange-700 dark:text-orange-300 mb-4">{error}</p>
                    <div className="bg-white/60 dark:bg-slate-800/60 rounded-xl p-4">
                      <h5 className="font-medium text-slate-900 dark:text-white mb-2">ðŸ“‹ Supported Document Types:</h5>
                      <ul className="text-sm text-slate-700 dark:text-slate-300 space-y-1">
                        <li>â€¢ Contracts and Agreements</li>
                        <li>â€¢ Terms & Conditions</li>
                        <li>â€¢ Non-Disclosure Agreements (NDAs)</li>
                        <li>â€¢ Memorandums of Understanding (MOUs)</li>
                        <li>â€¢ Service/Work Agreements</li>
                        <li>â€¢ Employment Contracts</li>
                        <li>â€¢ Rental/Lease Agreements</li>
                        <li>â€¢ And other legal documents</li>
                      </ul>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          )}
          
          {loading && (
            <div className="mt-12 flex flex-col items-center animate-fade-in">
              <div className="relative">
                <div className="w-20 h-20 border-4 border-blue-200 border-t-blue-600 rounded-full animate-spin"></div>
                <div className="absolute inset-0 w-20 h-20 border-4 border-transparent border-t-purple-600 rounded-full animate-spin" style={{ animationDelay: '0.5s' }}></div>
              </div>
              <div className="mt-6 text-center">
                <h3 className="text-xl font-semibold text-slate-700 dark:text-slate-300 mb-2">
                  Analyzing your document with AI...
                </h3>
                <p className="text-slate-500 dark:text-slate-400">
                  This may take a few moments depending on document size
                </p>
              </div>
            </div>
          )}
          
          {analysis && (
            <div className="mt-16 space-y-8 animate-fade-in">
              {/* Header */}
              <div className="text-center mb-12">
                <h2 className="text-3xl sm:text-4xl font-display font-bold mb-4">
                  <span className="bg-gradient-to-r from-slate-900 via-blue-800 to-purple-800 dark:from-white dark:via-blue-200 dark:to-purple-200 bg-clip-text text-transparent">
                    Analysis Complete
                  </span>
                </h2>
                <p className="text-lg text-slate-600 dark:text-slate-300">
                  Here's what our AI found in your document
                </p>
              </div>

              {/* Analysis Results */}
              <div className="grid grid-cols-1 lg:grid-cols-2 gap-8 max-w-7xl mx-auto">
                {/* Summary */}
                <div className="bg-white/80 dark:bg-slate-800/80 backdrop-blur-sm rounded-2xl shadow-soft border border-slate-200/50 dark:border-slate-700/50 overflow-hidden hover:shadow-large transition-all duration-300">
                  <div className="px-6 py-4 bg-gradient-to-r from-blue-50 to-cyan-50 dark:from-blue-900/20 dark:to-cyan-900/20 border-b border-slate-200/50 dark:border-slate-700/50">
                    <div className="flex items-center gap-3">
                      <div className="w-10 h-10 bg-gradient-to-br from-blue-500 to-cyan-500 rounded-xl flex items-center justify-center">
                        <svg className="w-5 h-5 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                          <path strokeLinecap="round" strokeLinejoin="round" strokeWidth="2" d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z" />
                        </svg>
                      </div>
                      <div>
                        <h3 className="font-semibold text-slate-900 dark:text-white">Plain English Summary</h3>
                        <p className="text-sm text-slate-600 dark:text-slate-300">Key points in simple terms</p>
                      </div>
                    </div>
                  </div>
                  <div className="p-6">
                    <p className="text-slate-700 dark:text-slate-200 leading-relaxed">{analysis.summary}</p>
                  </div>
                </div>

                {/* Risks */}
                <div className="bg-white/80 dark:bg-slate-800/80 backdrop-blur-sm rounded-2xl shadow-soft border border-slate-200/50 dark:border-slate-700/50 overflow-hidden hover:shadow-large transition-all duration-300">
                  <div className="px-6 py-4 bg-gradient-to-r from-orange-50 to-red-50 dark:from-orange-900/20 dark:to-red-900/20 border-b border-slate-200/50 dark:border-slate-700/50">
                    <div className="flex items-center gap-3">
                      <div className="w-10 h-10 bg-gradient-to-br from-orange-500 to-red-500 rounded-xl flex items-center justify-center">
                        <svg className="w-5 h-5 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                          <path strokeLinecap="round" strokeLinejoin="round" strokeWidth="2" d="M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.964-.833-2.732 0L3.732 16.5c-.77.833.192 2.5 1.732 2.5z" />
                        </svg>
                      </div>
                      <div>
                        <h3 className="font-semibold text-slate-900 dark:text-white">Risky Clauses</h3>
                        <p className="text-sm text-slate-600 dark:text-slate-300">Watch out for these</p>
                      </div>
                    </div>
                  </div>
                  <div className="p-6">
                    <ul className="space-y-3">
                      {analysis.risks.map((risk, i) => (
                        <li key={i} className="flex items-start gap-3">
                          <div className="w-6 h-6 bg-red-100 dark:bg-red-900/40 rounded-full flex items-center justify-center flex-shrink-0 mt-0.5">
                            <span className="text-xs font-bold text-red-600 dark:text-red-400">{i + 1}</span>
                          </div>
                          <span className="text-slate-700 dark:text-slate-200">{risk}</span>
                        </li>
                      ))}
                    </ul>
                  </div>
                </div>

                {/* Rights & Duties */}
                <div className="bg-white/80 dark:bg-slate-800/80 backdrop-blur-sm rounded-2xl shadow-soft border border-slate-200/50 dark:border-slate-700/50 overflow-hidden hover:shadow-large transition-all duration-300">
                  <div className="px-6 py-4 bg-gradient-to-r from-green-50 to-emerald-50 dark:from-green-900/20 dark:to-emerald-900/20 border-b border-slate-200/50 dark:border-slate-700/50">
                    <div className="flex items-center gap-3">
                      <div className="w-10 h-10 bg-gradient-to-br from-green-500 to-emerald-500 rounded-xl flex items-center justify-center">
                        <svg className="w-5 h-5 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                          <path strokeLinecap="round" strokeLinejoin="round" strokeWidth="2" d="M9 12l2 2 4-4m5.618-4.016A11.955 11.955 0 0112 2.944a11.955 11.955 0 01-8.618 3.04A12.02 12.02 0 003 9c0 5.591 3.824 10.29 9 11.622 5.176-1.332 9-6.03 9-11.622 0-1.042-.133-2.052-.382-3.016z" />
                        </svg>
                      </div>
                      <div>
                        <h3 className="font-semibold text-slate-900 dark:text-white">Your Rights & Duties</h3>
                        <p className="text-sm text-slate-600 dark:text-slate-300">What you can and must do</p>
                      </div>
                    </div>
                  </div>
                  <div className="p-6">
                    <ul className="space-y-3">
                      {analysis.rights.map((right, i) => (
                        <li key={i} className="flex items-start gap-3">
                          <div className="w-6 h-6 bg-green-100 dark:bg-green-900/40 rounded-full flex items-center justify-center flex-shrink-0 mt-0.5">
                            <span className="text-xs font-bold text-green-600 dark:text-green-400">{i + 1}</span>
                          </div>
                          <span className="text-slate-700 dark:text-slate-200">{right}</span>
                        </li>
                      ))}
                    </ul>
                  </div>
                </div>

                {/* Structure */}
                <div className="bg-white/80 dark:bg-slate-800/80 backdrop-blur-sm rounded-2xl shadow-soft border border-slate-200/50 dark:border-slate-700/50 overflow-hidden hover:shadow-large transition-all duration-300">
                  <div className="px-6 py-4 bg-gradient-to-r from-purple-50 to-pink-50 dark:from-purple-900/20 dark:to-pink-900/20 border-b border-slate-200/50 dark:border-slate-700/50">
                    <div className="flex items-center gap-3">
                      <div className="w-10 h-10 bg-gradient-to-br from-purple-500 to-pink-500 rounded-xl flex items-center justify-center">
                        <svg className="w-5 h-5 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                          <path strokeLinecap="round" strokeLinejoin="round" strokeWidth="2" d="M19 11H5m14 0a2 2 0 012 2v6a2 2 0 01-2 2H5a2 2 0 01-2-2v-6a2 2 0 012-2m14 0V9a2 2 0 00-2-2M5 11V9a2 2 0 012-2m0 0V5a2 2 0 012-2h6a2 2 0 012 2v2M7 7h10" />
                        </svg>
                      </div>
                      <div>
                        <h3 className="font-semibold text-slate-900 dark:text-white">Contract Structure</h3>
                        <p className="text-sm text-slate-600 dark:text-slate-300">How it's organized</p>
                      </div>
                    </div>
                  </div>
                  <div className="p-6">
                    <ul className="space-y-3">
                      {analysis.structure.map((section, i) => (
                        <li key={i} className="flex items-start gap-3">
                          <div className="w-6 h-6 bg-purple-100 dark:bg-purple-900/40 rounded-full flex items-center justify-center flex-shrink-0 mt-0.5">
                            <span className="text-xs font-bold text-purple-600 dark:text-purple-400">{i + 1}</span>
                          </div>
                          <span className="text-slate-700 dark:text-slate-200">{section}</span>
                        </li>
                      ))}
                    </ul>
                  </div>
                </div>
              </div>

              {/* Action Buttons */}
              <div className="flex flex-col sm:flex-row gap-4 justify-center items-center mt-12">
                <button 
                  onClick={handleDownload}
                  className="group relative px-8 py-4 bg-gradient-to-r from-green-600 to-emerald-600 hover:from-green-700 hover:to-emerald-700 text-white font-semibold text-lg rounded-2xl shadow-large hover:shadow-2xl transition-all duration-300 hover:scale-105 focus:ring-4 focus:ring-green-500/50 focus:outline-none"
                >
                  <span className="relative z-10 flex items-center gap-3">
                    <svg className="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path strokeLinecap="round" strokeLinejoin="round" strokeWidth="2" d="M4 16v2a2 2 0 002 2h12a2 2 0 002-2v-2M7 10l5 5m0 0l5-5m-5 5V4" />
                    </svg>
                    Download Report
                  </span>
                  <div className="absolute inset-0 bg-gradient-to-r from-green-600/20 to-emerald-600/20 rounded-2xl blur-xl group-hover:blur-2xl transition-all duration-300"></div>
                </button>

                {typeof navigator !== 'undefined' && 'share' in navigator && (
                  <button 
                    onClick={handleShare}
                    className="px-8 py-4 bg-white/80 dark:bg-slate-800/80 backdrop-blur-sm border border-slate-200/50 dark:border-slate-700/50 text-slate-700 dark:text-slate-300 font-semibold text-lg rounded-2xl shadow-soft hover:shadow-medium transition-all duration-300 hover:scale-105 focus:ring-4 focus:ring-slate-500/50 focus:outline-none"
                  >
                    <span className="flex items-center gap-3">
                      <svg className="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path strokeLinecap="round" strokeLinejoin="round" strokeWidth="2" d="M8.684 13.342C8.886 12.938 9 12.482 9 12c0-.482-.114-.938-.316-1.342m0 2.684a3 3 0 110-2.684m0 2.684l6.632 3.316m-6.632-6l6.632-3.316m0 0a3 3 0 105.367-2.684 3 3 0 00-5.367 2.684zm0 9.316a3 3 0 105.367 2.684 3 3 0 00-5.367-2.684z" />
                      </svg>
                      Share Analysis
                    </span>
                  </button>
                )}
              </div>
            </div>
          )}
        </div>
      </main>

      {/* Footer */}
      <footer className="mt-20 mb-8">
        <div className="container mx-auto px-4 sm:px-6 lg:px-8">
          <div className="max-w-4xl mx-auto">
            <div className="bg-gradient-to-r from-yellow-50 to-orange-50 dark:from-yellow-900/20 dark:to-orange-900/20 border-l-4 border-yellow-400 dark:border-yellow-600 rounded-2xl p-6 shadow-soft">
              <div className="flex items-start gap-4">
                <div className="w-10 h-10 bg-yellow-100 dark:bg-yellow-900/40 rounded-xl flex items-center justify-center flex-shrink-0">
                  <svg className="w-5 h-5 text-yellow-600 dark:text-yellow-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth="2" d="M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.964-.833-2.732 0L3.732 16.5c-.77.833.192 2.5 1.732 2.5z" />
                  </svg>
                </div>
                <div>
                  <h4 className="font-semibold text-yellow-800 dark:text-yellow-200 mb-2">Important Disclaimer</h4>
                  <p className="text-yellow-700 dark:text-yellow-300 text-sm leading-relaxed">
                    <strong>This tool helps you understand legal documents â€” not replace a real lawyer.</strong>
                  </p>
                </div>
              </div>
            </div>
          </div>
        </div>
      </footer>
    </div>
  );
}
